<%- include("partials/_header") %>
  <div class="container mt-5">
    <div class="row">
      <div class="col-md-7">
        <table>
          <thead>
            <tr>
              <td>N°</td>
              <td>Nombre</td>
              <td>Destino</td>
              <td>Fecha de ida</td>
              <td>Fecha de vuelta</td>
              <td>Acción</td>
            </tr>
          </thead>
          <tbody>
            <% if(customers){ %>
              <% for(var i=0; i < customers.length; i++){ %>
                <tr>
                  <td>
                    <%= (i + 1 )%>
                  </td>
                  <td>
                    <%= customers[i].nombre %>
                  </td>
                  <td>
                    <%= customers[i].Destino %>
                  </td>
                  <td>
                    <%= customers[i].fechaida %>
                  </td>
                  <td>
                    <%= customers[i].fechavuelta %>
                  </td>
                  <td class="d-flex gap-2">
                    <a href="/update/<%= customers[i].id %>" class="btn-btn-primary">
                      Editar
                    </a>
                    <a href="/delete/<%= customers[i].id %>" class="btn-btn-danger">
                      Eliminar
                    </a>
                  </td>
                </tr>
                <% } %>
                  <% } %>
          </tbody>
          </table>
      </div>
      <div class="col-md-5">
        <div class="card-body">
          <form action="/add" method="POST">
            <input type="text" name="nombre" placeholder="nombre" class="form-control-mb-3" autofocus />
            <select name="lugar" class="form-control-mb-3">
              <% if (lugares && lugares.length > 0) { %>
                <% lugares.forEach((lugar) => { %>
                    <option value="<%= lugar.idLugar %>"><%= lugar.lugarDestino %></option>
                <% }) %>
              <% } else { %>
                  <option value="">No hay lugares disponibles</option>
              <% } %>
            </select>
            <div id="precioContainer" class="mb-3">
              <label>Precio del Pasaje: </label>
              <span id="precioDisplay">Seleccione un destino</span>
            </div>
            <h6>Fecha de ida:</h6>
            <input type="date" name="Fecha de Ida" placeholder="fechaida" class="form-control-mb-3" />
            <h6>Fecha de vuelta:</h6>
            <input type="date" name="Fecha de Vuelta" placeholder="fechavuelta" class="form-control-mb-3" />

            <button type="submit" class="btn-btn-primary">Guardar</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Al cambiar el destino, obtener el precio desde el servidor
    document.getElementById('destinoSelect').addEventListener('change', async (event) => {
        const destinoId = event.target.value;
        const response = await fetch(`/precio/${destinoId}`);
        const data = await response.json();
        
        if (data.precio) {
            document.getElementById('precioDisplay').textContent = `$${data.precio} ARS`;
        } else {
            document.getElementById('precioDisplay').textContent = 'Error al calcular el precio';
        }
    });
  </script>
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const fechaSalidaInput = document.getElementById("fechaSalida");
      const fechaVueltaInput = document.getElementById("fechaVuelta");
  
      const fechaBase = new Date("2024-11-05");
      setDateRestrictions(fechaSalidaInput, fechaBase, 2);
  
      fechaSalidaInput.addEventListener("change", () => {
        const selectedDate = new Date(fechaSalidaInput.value);
        const fechaMinRegreso = new Date(selectedDate);
        fechaMinRegreso.setDate(fechaMinRegreso.getDate() + 1);
        setDateRestrictions(fechaVueltaInput, fechaMinRegreso, 2);
      });
    });
  
    function setDateRestrictions(inputElement, baseDate, intervalDays) {
      const today = new Date();
      const minDate = new Date(Math.max(baseDate, today));
      
      const minDateString = minDate.toISOString().split("T")[0];
      inputElement.min = minDateString;
  
      inputElement.addEventListener("input", (event) => {
        const selectedDate = new Date(inputElement.value);
        const diffDays = (selectedDate - minDate) / (1000 * 60 * 60 * 24);
        if (diffDays % intervalDays !== 0) {
          inputElement.setCustomValidity(`Selecciona solo fechas cada ${intervalDays} días.`);
        } else {
          inputElement.setCustomValidity("");
        }
      });
    }
  </script>
  <%- include("partials/_footer") %>