<%- include("partials/_header") %>
<div class="container mt-5">
  <div class="row">
    <div class="col-md-5">
      <div class="card-body">
        <form action="/add" method="POST">
          <input type="text" name="nombre" placeholder="nombre" class="form-control-mb-3" autofocus />
          <select name="lugar" class="form-control-mb-3">
            <% if (lugares && lugares.length > 0) { %>
              <% lugares.forEach((lugar) => { %>
                <option value="<%= lugar.idLugar %>"><%= lugar.lugarDestino %></option>
              <% }); %>
            <% } else { %>
              <option value="">No hay lugares disponibles</option>
            <% } %>
          </select>
          <h6>Fecha de ida:</h6>
          <input type="date" name="fechaida" class="form-control-mb-3" required />
          <h6>Fecha de vuelta:</h6>
          <input type="date" name="fechavuelta" class="form-control-mb-3" required />
          <button type="submit" class="btn btn-primary">Guardar</button>
        </form>
      </div>
    </div>
  </div>
</div>

  <script>
    // Al cambiar el destino, obtener el precio desde el servidor
    document.getElementById('destinoSelect').addEventListener('change', async (event) => {
        const destinoId = event.target.value;
        const response = await fetch(`/precio/${destinoId}`);
        const data = await response.json();
        
        if (data.precio) {
            document.getElementById('precioDisplay').textContent = `$${data.precio} ARS`;
        } else {
            document.getElementById('precioDisplay').textContent = 'Error al calcular el precio';
        }
    });
  </script>
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const fechaSalidaInput = document.getElementById("fechaSalida");
      const fechaVueltaInput = document.getElementById("fechaVuelta");
  
      const fechaBase = new Date("2024-11-05");
      setDateRestrictions(fechaSalidaInput, fechaBase, 2);
  
      fechaSalidaInput.addEventListener("change", () => {
        const selectedDate = new Date(fechaSalidaInput.value);
        const fechaMinRegreso = new Date(selectedDate);
        fechaMinRegreso.setDate(fechaMinRegreso.getDate() + 1);
        setDateRestrictions(fechaVueltaInput, fechaMinRegreso, 2);
      });
    });
  
    function setDateRestrictions(inputElement, baseDate, intervalDays) {
      const today = new Date();
      const minDate = new Date(Math.max(baseDate, today));
      
      const minDateString = minDate.toISOString().split("T")[0];
      inputElement.min = minDateString;
  
      inputElement.addEventListener("input", (event) => {
        const selectedDate = new Date(inputElement.value);
        const diffDays = (selectedDate - minDate) / (1000 * 60 * 60 * 24);
        if (diffDays % intervalDays !== 0) {
          inputElement.setCustomValidity(`Selecciona solo fechas cada ${intervalDays} d√≠as.`);
        } else {
          inputElement.setCustomValidity("");
        }
      });
    }
  </script>
  <%- include("partials/_footer") %>